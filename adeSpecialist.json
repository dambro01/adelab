{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploys ADE environment 1 Key vault, 2 Disk Encryption Sets, 3 Keys, 2 Linux VMs, 5 Windows VMs, VMSS Windows",
    "author": "Didier Ambroise",
    "GitHub": "https://github.com/dambro01/adelab",
    "Enablement": "https://learn.microsoft.com/en-us/troubleshoot/azure/virtual-machines/welcome-virtual-machines",
    "deploymentLink": "https://labbox.azurewebsites.net/api/Labbox?url=https://raw.githubusercontent.com/dambro01/adelab/main/adeSpecialist.json"
  },
  "parameters": {
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies your object ID. Get it by using Get-AzADUser -SignedIn PowerShell cmdlet."
      }
    },
    "adminUsername": {
      "maxLength": 20,
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machines."
      }
    },
    "adminPassword": {
      "minLength": 12,
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machines."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vaultName": "[concat('keyvault-', uniqueString(resourceGroup().id))]",
    "storageUri": "[format('store{0}', uniqueString(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "windowsVMName": "adeWindowsLab",
    "linuxVMName": "adeLinuxLab",
    "vmSize": "Standard_B2ms",
    "vmssName": "adeVMSS",
    "virtualNetworkName": "myVNET",
    "publicIPAddressName": "myPublicIP",
    "networkSecurityGroupName": "default-NSG",
    "windowsVMCount": 5,
    "linuxVMCount": 2,
    "instanceCount": 2,
    "keyName": "key-1",
    "key2Name": "key-2",
    "key3Name": "key-3",
    "diskencsetName": "des-cmk",
    "diskencset2Name": "des-pmkcmk",
    "roleName": "Key Vault Administrator",
    "roleIdMapping": {
      "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
      "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
      "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
      "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
      "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
      "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
      "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
      "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('vaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": "true",
        "enabledForDiskEncryption": "true",
        "enabledForTemplateDeployment": "true",
        "enableSoftDelete": "true",
        "enablePurgeProtection": "true",
        "enableRbacAuthorization": "true",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(variables('roleIdMapping')[variables('roleName')], parameters('objectId'), resourceId('Microsoft.KeyVault/vaults', variables('vaultName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[variables('roleName')])]",
        "principalId": "[parameters('objectId')]",
        "principalType": "User"
      },
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('vaultName'))]"
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('vaultName'), '/', variables('keyName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "kty": "RSA",
        "keySize": 4096
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('vaultName'), '/', variables('key2Name'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "kty": "RSA",
        "keySize": 4096
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('vaultName'), '/', variables('key3Name'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "kty": "RSA",
        "keySize": 4096
      }
    },
    {
      "type": "Microsoft.Compute/diskEncryptionSets",
      "apiVersion": "2021-12-01",
      "name": "[variables('diskencsetName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/keys', variables('vaultName'), variables('keyName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "activeKey": {
          "sourceVault": {
            "id": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
          },
          "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', variables('vaultName'), variables('keyName')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/diskEncryptionSets",
      "apiVersion": "2021-12-01",
      "name": "[variables('diskencset2Name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/keys', variables('vaultName'), variables('keyName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "activeKey": {
          "sourceVault": {
            "id": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
          },
          "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', variables('vaultName'), variables('keyName')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
        },
        "encryptionType": "EncryptionAtRestWithPlatformAndCustomerKeys"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-08-01",
      "name": "[concat(variables('publicIPAddressName'), copyIndex(1))]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "copy": {
        "name": "publicIPcopy",
        "count": "[add(variables('windowsVMCount'),variables('linuxVMCount'))]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowInboundAccess",
            "properties": {
              "priority": 100,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRanges": [
                "3389",
                "22"
              ],
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-08-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-08-01",
      "name": "[concat(variables('nicName'), copyIndex(1))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "publicIPcopy",
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyIndex(1)))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicCopy",
        "count": "[add(variables('windowsVMCount'),variables('linuxVMCount'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('storageUri')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[concat(variables('windowsVMName'), copyIndex(1))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "nicCopy"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('windowsVMName'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('storageUri'), '.blob.core.windows.net')]"
          }
        }
      },
      "copy": {
        "name": "windowsVMcopy",
        "count": "[variables('windowsVMCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[concat(variables('linuxVMName'), copyIndex(1))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "nicCopy"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('linuxVMName'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 4,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(add(variables('windowsVMCount'),1))))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', variables('storageUri'), '.blob.core.windows.net')]"
          }
        }
      },
      "copy": {
        "name": "linuxVMcopy",
        "count": "[variables('linuxVMCount')]"
      }
    },
    {
      "name": "[concat(variables('linuxVMName'), copyIndex(1), '/runLinuxScriptinCSE')]",
      "copy": {
        "count": "[variables('linuxVMCount')]",
        "name": "linuxVMCSEcopy"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "linuxVMcopy"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "bash LinuxDataDisk.sh",
          "fileUris": [
            "https://raw.githubusercontent.com/dambro01/adelab/main/scripts/LinuxDataDisk.sh"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmssName')]",
      "location": "[variables('location')]",
      "apiVersion": "2020-12-01",
      "sku": {
        "name": "[variables('vmSize')]",
        "tier": "Standard",
        "capacity": "[variables('instanceCount')]"
      },
      "dependsOn": [
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "overprovision": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "myVMSSNic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "myipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "keyUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', variables('vaultName'), variables('keyName')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
    }
  }
}